C51 COMPILER V9.01   LCD12864                                                              11/04/2022 20:44:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN lcd12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd12864.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"lcd12864.h"
   2          
   3          uchar code nong[]="正一二三四五六七八九十冬腊初廿";
   4          /*******************************************************************************
   5          * 函 数 名         : LCD12864_Delay1ms
   6          * 函数功能                 : 延时1MS
   7          * 输    入         : c
   8          * 输    出         : 无
   9          *******************************************************************************/
  10          
  11          void LCD12864_Delay1ms(uint c)
  12          {
  13   1          uchar a,b;
  14   1              for(; c>0; c--)
  15   1              {
  16   2                  for(b=199; b>0; b--)
  17   2                      {
  18   3                      for(a=1; a>0; a--);
  19   3                      }
  20   2              }
  21   1      }
  22          
  23          /*******************************************************************************
  24          * 函 数 名         : LCD12864_Busy
  25          * 函数功能                 : 检测LCD是否忙
  26          * 输    入         : 无
  27          * 输    出         : 1或0（1表示不忙，0表示忙）
  28          *******************************************************************************/
  29          
  30          uchar LCD12864_Busy(void)
  31          {
  32   1              uchar i = 0;
  33   1      
  34   1              LCD12864_RS = 0;        //选择命令
  35   1              LCD12864_RW = 1;        //选择读取
  36   1      
  37   1              LCD12864_EN = 1;
  38   1              LCD12864_Delay1ms(1);
  39   1      
  40   1              while((LCD12864_DATAPORT & 0x80) == 0x80)       //检测读取到的值
  41   1              {
  42   2                      i++;
  43   2                      if(i > 100)
  44   2                      {
  45   3                              LCD12864_EN = 0;
  46   3                              return 0;          //超过等待时间返回0表示失败
  47   3                      }
  48   2              }
  49   1      
  50   1              LCD12864_EN = 0;
  51   1      
  52   1              return 1;
  53   1      }
  54          
  55          /*******************************************************************************
C51 COMPILER V9.01   LCD12864                                                              11/04/2022 20:44:02 PAGE 2   

  56          * 函 数 名         : LCD12864_WriteCmd
  57          * 函数功能                 : 写命令
  58          * 输    入         : cmd
  59          * 输    出         : 无
  60          *******************************************************************************/
  61          
  62          void LCD12864_WriteCmd(uchar cmd)
  63          {
  64   1              uchar i;
  65   1              i = 0;
  66   1              while( LCD12864_Busy() == 0)
  67   1              {
  68   2                      LCD12864_Delay1ms(1);
  69   2                      i++;
  70   2                      if( i>100)
  71   2                      {
  72   3                              return;    //超过等待退出
  73   3                      }       
  74   2              }
  75   1              
  76   1              LCD12864_RS = 0;     //选择命令
  77   1              LCD12864_RW = 0;     //选择写入
  78   1              LCD12864_EN = 0;     //初始化使能端
  79   1      
  80   1              LCD12864_DATAPORT = cmd;   //放置数据
  81   1      
  82   1              LCD12864_EN = 1;                   //写时序
  83   1              LCD12864_Delay1ms(5);
  84   1              LCD12864_EN = 0;                                        
  85   1      }
  86          
  87          /*******************************************************************************
  88          * 函 数 名         : LCD12864_WriteData
  89          * 函数功能                 : 写数据
  90          * 输    入         : dat
  91          * 输    出         : 无
  92          *******************************************************************************/
  93          
  94          void LCD12864_WriteData(uchar dat)
  95          {
  96   1              uchar i;
  97   1              i = 0;
  98   1              while( LCD12864_Busy() == 0)
  99   1              {
 100   2                      LCD12864_Delay1ms(1);
 101   2                      i++;
 102   2                      if( i>100)
 103   2                      {
 104   3                              return;    //超过等待退出
 105   3                      }       
 106   2              }
 107   1      
 108   1              LCD12864_RS = 1;     //选择数据
 109   1              LCD12864_RW = 0;     //选择写入
 110   1              LCD12864_EN = 0;     //初始化使能端
 111   1      
 112   1              LCD12864_DATAPORT = dat;   //放置数据
 113   1      
 114   1              LCD12864_EN = 1;                   //写时序
 115   1              LCD12864_Delay1ms(5);
 116   1              LCD12864_EN = 0;                                                                
 117   1      }
C51 COMPILER V9.01   LCD12864                                                              11/04/2022 20:44:02 PAGE 3   

 118          
 119          /*******************************************************************************
 120          * 函 数 名         : LCD12864_ReadData
 121          * 函数功能                 : 读取数据
 122          * 输    入         : 无
 123          * 输    出         : 读取到的8位数据
 124          *******************************************************************************/
 125          #ifdef LCD12864_PICTURE
              
              uchar LCD12864_ReadData(void)
              {
                      uchar i, readValue;
              
                      i = 0;
                      while( LCD12864_Busy() == 0)
                      {
                              LCD12864_Delay1ms(1);
                              i++;
                              if( i>100)
                              {
                                      return 0;          //超过等待退出
                              }       
                      }
              
                      LCD12864_RS = 1;       //选择命令
                      LCD12864_RW = 1;
                      LCD12864_EN = 0;
                      LCD12864_Delay1ms(1);  //等待
              
                      LCD12864_EN = 1;
                      LCD12864_Delay1ms(1);
                      readValue = LCD12864_DATAPORT;
                      LCD12864_EN = 0;
              
                      return readValue;
              }
              
              #endif
 156          
 157          /*******************************************************************************
 158          * 函 数 名         : LCD12864_Init
 159          * 函数功能                 : 初始化LCD12864
 160          * 输    入         : 无
 161          * 输    出         : 无
 162          *******************************************************************************/
 163          
 164          void LCD12864_Init()
 165          {
 166   1              LCD12864_PSB = 1;         //选择并行输入
 167   1      
 168   1      
 169   1              LCD12864_WriteCmd(0x30);  //选择基本指令操作
 170   1              LCD12864_WriteCmd(0x0c);  //显示开，关光标
 171   1              LCD12864_WriteCmd(0x01);  //清除LCD12864的显示内容
 172   1      }
 173          
 174          /*******************************************************************************
 175          * 函 数 名         : LCD12864_ClearScreen
 176          * 函数功能                 : 在画图模式下，LCD12864的01H命令不能清屏，所以要自己写一个清
 177          *                  * 屏函数
 178          * 输    入         : 无
 179          * 输    出         : 无
C51 COMPILER V9.01   LCD12864                                                              11/04/2022 20:44:02 PAGE 4   

 180          *******************************************************************************/
 181          #ifdef LCD12864_PICTURE
              
              void LCD12864_ClearScreen(void)
              {
                      uchar i,j;
              
                      LCD12864_WriteCmd(0x34);          //开启拓展指令集
              
                      for(i=0;i<32;i++)                         //因为LCD有纵坐标32格所以写三十二次
                      {
                              LCD12864_WriteCmd(0x80+i);                //先写入纵坐标Y的值
                              LCD12864_WriteCmd(0x80);                  //再写入横坐标X的值
                              for(j=0;j<32;j++)                 //横坐标有16位，每位写入两个字节的的数据，也
                              {                                                 //就写入32次以为当写入两个字节之后横坐标会自
                                      LCD12864_WriteData(0xFF);         //动加1，所以就不用再次写入地址了。
                              }
                      }
              
                      LCD12864_WriteCmd(0x36);         //0x36扩展指令里面打开绘图显示
                      LCD12864_WriteCmd(0x30);         //恢复基本指令集
              }
              
              #endif
 204          /*******************************************************************************
 205          * 函 数 名         : LCD12864_SetWindow
 206          * 函数功能                 : 设置在基本指令模式下设置显示坐标。注意：x是设置行，y是设置列
 207          * 输    入         : x, y
 208          * 输    出         : 无
 209          *******************************************************************************/
 210          
 211          void LCD12864_SetWindow(uchar x, uchar y)
 212          {
 213   1              uchar pos;
 214   1      
 215   1              if(x == 0)         // 第一行的地址是80H
 216   1              {
 217   2                      x = 0x80;
 218   2              }
 219   1                      
 220   1              else if(x == 1)  //第二行的地址是90H
 221   1              {
 222   2                      x = 0x90;       
 223   2              }
 224   1              
 225   1              else if(x == 2)  //第三行的地址是88H
 226   1              {
 227   2                      x = 0x88;
 228   2              }
 229   1              
 230   1              else if(x == 3)
 231   1              {
 232   2                      x = 0x98;
 233   2              }
 234   1              
 235   1              pos = x + y;
 236   1              LCD12864_WriteCmd(pos);
 237   1      }
 238          void LCD12864_Writechar(uchar s[],uchar x,uchar y) //在固定位置写字符串
 239          {       uchar i=0;
 240   1              LCD12864_SetWindow(x,y);
 241   1              while(s[i]!='\0')
C51 COMPILER V9.01   LCD12864                                                              11/04/2022 20:44:02 PAGE 5   

 242   1              {       LCD12864_WriteData(s[i]);
 243   2                      i++;
 244   2              }
 245   1      
 246   1      }
 247          void LCD12864_Writestring(uchar c[],uchar num,uchar x,uchar y)
 248          {        LCD12864_SetWindow(x,y);
 249   1               LCD12864_WriteData(c[num]);
 250   1               LCD12864_WriteData(c[num+1]);
 251   1      }
 252          void LCD12864_TIME(uchar t,uchar x,uchar y)
 253          {         
 254   1              LCD12864_SetWindow(x,y);
 255   1              LCD12864_WriteData(t/10+'0');
 256   1              LCD12864_WriteData(t%10+'0');
 257   1      }
 258          void LCD12864_LUNAR(uchar mon,uchar day)
 259          {       if(mon==1)
 260   1              LCD12864_Writestring(nong,0,3,2);
 261   1              else
 262   1              LCD12864_Writestring(nong,2*mon,3,2);
 263   1              LCD12864_Writechar("月",3,3);
 264   1              if(day<=10)
 265   1              LCD12864_Writestring(nong,26,3,4);
 266   1              else if((day>10)&&(day<=19))
 267   1              LCD12864_Writestring(nong,20,3,4);
 268   1              else
 269   1              LCD12864_Writestring(nong,28,3,4);
 270   1              if(day%10!=0)
 271   1              LCD12864_Writestring(nong,2*(day%10),3,5);
 272   1              else
 273   1              LCD12864_Writestring(nong,20,3,5);
 274   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    503    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      15
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
