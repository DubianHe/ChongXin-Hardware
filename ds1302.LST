C51 COMPILER V9.01   DS1302                                                                11/04/2022 20:44:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ds1302.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "ds1302.h"
   2          #include <main.h>
   3          //---DS1302写入和读取时分秒的地址命令---//
   4          //---秒分时日月周年 最低位读写位;-------//
   5          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
   6          
   7          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   8          
   9          uchar initial_time[7]={0x00, 0x09, 0x10,0x20,0x05,0x04,0x22};
  10          
  11          /*******************************************************************************
  12          * 函 数 名         : Ds1302Write
  13          * 函数功能                 : 向DS1302命令（地址+数据）
  14          * 输    入         : addr,dat
  15          * 输    出         : 无
  16          *******************************************************************************/
  17          
  18          void Ds1302Write(uchar addr, uchar dat) {
  19   1              uchar n;
  20   1              RST = 0;
  21   1              _nop_();
  22   1      
  23   1              SCLK = 0;//先将SCLK置低电平。
  24   1              _nop_();
  25   1              RST = 1; //然后将RST(CE)置高电平。
  26   1              _nop_();
  27   1      
  28   1              for (n = 0; n < 8; n++) { //开始传送八位地址命令
  29   2                      DSIO = addr & 0x01;//数据从低位开始传送
  30   2                      addr >>= 1;
  31   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  32   2                      _nop_();
  33   2                      SCLK = 0;
  34   2                      _nop_();
  35   2              }
  36   1              for (n = 0; n < 8; n++) { //写入8位数据
  37   2                      DSIO = dat & 0x01;
  38   2                      dat >>= 1;
  39   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  40   2                      _nop_();
  41   2                      SCLK = 0;
  42   2                      _nop_();
  43   2              }
  44   1      
  45   1              RST = 0;//传送数据结束
  46   1              _nop_();
  47   1      }
  48          
  49          /*******************************************************************************
  50          * 函 数 名         : Ds1302Read
  51          * 函数功能                 : 读取一个地址的数据
  52          * 输    入         : addr
  53          * 输    出         : dat
  54          *******************************************************************************/
  55          uchar Ds1302Read(uchar addr) {
C51 COMPILER V9.01   DS1302                                                                11/04/2022 20:44:02 PAGE 2   

  56   1              uchar n, dat, dat1;
  57   1              RST = 0;
  58   1              _nop_();
  59   1      
  60   1              SCLK = 0;//先将SCLK置低电平。
  61   1              _nop_();
  62   1              RST = 1;//然后将RST(CE)置高电平。
  63   1              _nop_();
  64   1      
  65   1              for (n = 0; n < 8; n++) { //开始传送八位地址命令
  66   2                      DSIO = addr & 0x01;//数据从低位开始传送
  67   2                      addr >>= 1;
  68   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  69   2                      _nop_();
  70   2                      SCLK = 0;//DS1302下降沿时，放置数据
  71   2                      _nop_();
  72   2              }
  73   1              _nop_();
  74   1              for (n = 0; n < 8; n++) { //读取8位数据
  75   2                      dat1 = DSIO;//从最低位开始接收
  76   2                      dat = (dat >> 1) | (dat1 << 7);
  77   2                      SCLK = 1;
  78   2                      _nop_();
  79   2                      SCLK = 0;//DS1302下降沿时，放置数据
  80   2                      _nop_();
  81   2              }
  82   1      
  83   1              RST = 0;
  84   1              _nop_();        //以下为DS1302复位的稳定时间,必须的。
  85   1              SCLK = 1;
  86   1              _nop_();
  87   1              DSIO = 0;
  88   1              _nop_();
  89   1              DSIO = 1;
  90   1              _nop_();
  91   1              return dat;
  92   1      }
  93          void Ds1302Init()
  94          {
  95   1              uchar n;
  96   1              Ds1302Write(0x8E,0X00);          //禁止写保护，就是关闭写保护功能
  97   1              for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
  98   1              {
  99   2                      Ds1302Write(WRITE_RTC_ADDR[n],initial_time[n]); 
 100   2              }
 101   1              Ds1302Write(0x8E,0x80);          //打开写保护功能
 102   1      }
 103          
 104          
 105          
 106          /*******************************************************************************
 107          * 函 数 名         : Ds1302ReadTime
 108          * 函数功能                 : 读取时钟信息
 109          * 输    入         : 无
 110          * 输    出         : 无
 111          *******************************************************************************/
 112          void read_time(uchar *timedata) {
 113   1              uchar i, tmp;
 114   1              for (i = 0; i < 7; i++) {
 115   2                      timedata[i] = Ds1302Read(READ_RTC_ADDR[i]);
 116   2      
 117   2              }
C51 COMPILER V9.01   DS1302                                                                11/04/2022 20:44:02 PAGE 3   

 118   1              for (i = 0; i < 7; i++) { //循环7次
 119   2                      tmp=timedata[i] ;
 120   2                      timedata[i] = (tmp / 16 % 10) * 10;
 121   2                      timedata[i] += (tmp % 16);
 122   2      
 123   2              }
 124   1      }
 125          void turninto(TIME *timedata,uchar flags){
 126   1              timedata->date[0]=2+'0';
 127   1              timedata->date[1]='0';
 128   1              timedata->date[2]=timedata->year/10+'0';
 129   1              timedata->date[3]=timedata->year%10+'0';
 130   1              timedata->date[4]='-';
 131   1              timedata->date[5]=timedata->mon/10+'0';
 132   1              timedata->date[6]=timedata->mon%10+'0';
 133   1              timedata->date[7]='-';
 134   1              timedata->date[8]=timedata->day/10+'0';
 135   1              timedata->date[9]=timedata->day%10+'0';
 136   1              timedata->date[10]='\0';
 137   1              timedata->times[0]=timedata->hour/10+'0';
 138   1              timedata->times[1]=timedata->hour%10+'0';
 139   1              timedata->times[2]=':';
 140   1              timedata->times[3]=timedata->min/10+'0';
 141   1              timedata->times[4]=timedata->min%10+'0';
 142   1              timedata->times[5]=':';
 143   1              timedata->times[6]=timedata->sec/10+'0';
 144   1              timedata->times[7]=timedata->sec%10+'0';
 145   1              timedata->times[8]='\0';
 146   1              if(flags==1)
 147   1              {       if(timedata->hour>12)
 148   2                      {       timedata->times[0]=((timedata->hour-12)/10)+'0';
 149   3                              timedata->times[1]=(timedata->hour-12)%10+'0';} 
 150   2              }
 151   1      }
 152          void set_time(uchar *timedata){
 153   1              uchar i, tmp,tmps[7];
 154   1              for (i = 0; i < 7; i++) { //循环7次
 155   2                      tmp=timedata[i] ;
 156   2                      tmps[i] = (tmp / 10 % 16) * 16;
 157   2                      tmps[i] += (tmp % 10);
 158   2      
 159   2              }
 160   1              Ds1302Write(0x8E,0X00);
 161   1                      for (i=0; i<7; i++)//写入7个字节的时钟信号：分秒时日月周年
 162   1              {
 163   2                      Ds1302Write(WRITE_RTC_ADDR[i],tmps[i]); 
 164   2              }
 165   1              Ds1302Write(0x8E,0X80);
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    723    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      7      17
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
